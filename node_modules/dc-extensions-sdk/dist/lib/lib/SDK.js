"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var message_io_1 = require("message.io");
var Frame_1 = require("./Frame");
var Events_1 = require("./Events");
var Errors_1 = require("./Errors");
var MediaLink_1 = require("./MediaLink");
var ContentLink_1 = require("./ContentLink");
var ContentItem_1 = require("./ContentItem");
var ContentReference_1 = require("./ContentReference");
var Field_1 = require("./Field");
var Form_1 = require("./Form");
var SDK = /** @class */ (function () {
    /**
     * The SDK instance is the central place for all SDK methods. It takes an optional options object.
     * @param options
     */
    function SDK(options) {
        if (options === void 0) { options = {}; }
        this.defaultOptions = {
            window: window,
            connectionTimeout: 1000,
            debug: false
        };
        this.options = __assign(__assign({}, this.defaultOptions), options);
        this.connection = new message_io_1.ClientConnection(this.options);
        this.mediaLink = new MediaLink_1.MediaLink(this.connection);
        this.contentLink = new ContentLink_1.ContentLink(this.connection);
        this.contentReference = new ContentReference_1.ContentReference(this.connection);
        this.frame = new Frame_1.Frame(this.connection, this.options.window);
    }
    /**
     * Initialiser. Returns a promise that resolves to an instance of the SDK.
     */
    SDK.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {
                        var _this = this;
                        return __generator(this, function (_a) {
                            this.connection.init();
                            this.connection.on(message_io_1.MIO_EVENTS.CONNECTED, function () { return __awaiter(_this, void 0, void 0, function () {
                                var e_1;
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            _a.trys.push([0, 2, , 3]);
                                            return [4 /*yield*/, this.setupContext(resolve, reject)];
                                        case 1:
                                            _a.sent();
                                            resolve(this);
                                            return [3 /*break*/, 3];
                                        case 2:
                                            e_1 = _a.sent();
                                            reject(new Error(Errors_1.ERRORS_INIT.CONTEXT));
                                            return [3 /*break*/, 3];
                                        case 3: return [2 /*return*/];
                                    }
                                });
                            }); });
                            this.connection.on(message_io_1.MIO_EVENTS.CONNECTION_TIMEOUT, function () {
                                reject(new Error(Errors_1.ERRORS_INIT.CONNTECTION_TIMEOUT));
                            });
                            return [2 /*return*/];
                        });
                    }); })];
            });
        });
    };
    SDK.prototype.setupContext = function (resolve, reject) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, contentItemId, fieldSchema, params, locales, stagingEnvironment, readOnly, visualisation;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.requestContext()];
                    case 1:
                        _a = _b.sent(), contentItemId = _a.contentItemId, fieldSchema = _a.fieldSchema, params = _a.params, locales = _a.locales, stagingEnvironment = _a.stagingEnvironment, readOnly = _a.readOnly, visualisation = _a.visualisation;
                        this.contentItem = new ContentItem_1.ContentItem(this.connection, contentItemId);
                        this.field = new Field_1.Field(this.connection, fieldSchema);
                        this.form = new Form_1.Form(this.connection, readOnly);
                        this.params = params;
                        this.locales = locales;
                        this.visualisation = visualisation;
                        this.stagingEnvironment = stagingEnvironment;
                        return [2 /*return*/];
                }
            });
        });
    };
    SDK.prototype.requestContext = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.connection.request(Events_1.CONTEXT.GET)];
            });
        });
    };
    return SDK;
}());
exports.SDK = SDK;
//# sourceMappingURL=SDK.js.map